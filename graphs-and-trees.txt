####Exercises

1. What is a binary tree and what makes it unique to other trees?

A binary tree is a data structure in which a node may point at up to two other nodes, a left and a right. A binary tree starts with a root node, and is terminated by a “leaf,” which are nodes without children.

1. What is a heuristic?

It’s a guess- a programmer’s educated guess in an attempt to narrow down possibilities, with the downside being the likelihood in loss of accuracy in the search.

2. What is another problem besides the shortest-path problem that requires the use of heuristics?

A real world example of the use of heuristics is in anti-virus software, which scans files on your computer searching for code patterns common to certain viruses.

3. What is the difference between a depth-first search and a breadth-first search?

A depth-first search will search child nodes starting with the right node and descending as far as possible before backtracking. If there is no right node to check, it will backtrack to check the left node, and so on. Breadth-first will check each child node in a row before moving onto the next level.

4. Explain in your own words what an undirected, a-cyclic, unweighted graph is.

A graph in which nodes are connected and the edges do not point in any specific direction, does not have loops, and the cost of travel between nodes is not taken into account.

5. What kind of graph is a binary search tree?

Directed, a-cyclic, unweighted graph


####Programming Questions

1. Given a Binary Search Tree and a value, write a function that checks to see whether the value exists within the tree.

Example: The value 10 exists in the tree. The value 23 does not exist in the tree.

2. Given a Binary Search Tree and two nodes, n1 and n2, write a function that finds the distance between the two nodes.

Example: The distance between the nodes 4 and 10 is 4. The distance between the nodes 8 and 10 is 1. The distance between the nodes 1 and 14 is 4.
